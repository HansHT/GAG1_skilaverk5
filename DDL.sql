-- Projects
CREATE TABLE Projects1 (
 MID INTEGER NOT NULL,
 MN VARCHAR(50) NOT NULL,
 PRIMARY KEY (MID)
);

CREATE TABLE Projects2 (
 ID INTEGER NOT NULL,
 MID INTEGER NOT NULL,
 PRIMARY KEY (ID),
 FOREIGN KEY (MID) REFERENCES Projects1 (MID)
);

CREATE TABLE Projects3 (
 PID INTEGER NOT NULL,
 PN VARCHAR(50) NOT NULL,
 PRIMARY KEY (PID)
);

CREATE TABLE Projects4 (
 SID INTEGER NOT NULL,
 SN VARCHAR(50) NOT NULL,
 PRIMARY KEY (SID)
);

CREATE TABLE Projects0 (
 ID INTEGER NOT NULL,
 PID INTEGER NOT NULL,
 SID INTEGER NOT NULL,
 PRIMARY KEY (ID, PID, SID),
 FOREIGN KEY (ID) REFERENCES Projects2 (ID),
 FOREIGN KEY (PID) REFERENCES Projects3 (PID),
 FOREIGN KEY (SID) REFERENCES Projects4 (SID)
);

INSERT INTO Projects1
SELECT DISTINCT MID, MN
FROM Projects;

INSERT INTO Projects2
SELECT DISTINCT ID, MID
FROM Projects;

INSERT INTO Projects3
SELECT DISTINCT PID, PN
FROM Projects;

INSERT INTO Projects4
SELECT DISTINCT SID, SN
FROM Projects;

INSERT INTO Projects0
SELECT DISTINCT ID, PID, SID
FROM Projects;


-- Shows
CREATE TABLE Shows1(
    UID INTEGER NOT NULL, 
    UN VARCHAR(50) NOT NULL,
    PRIMARY KEY (UID)
);

CREATE TABLE Shows2(
    SID INTEGER NOT NULL, 
    TI VARCHAR(50) NOT NULL,
    RA CHAR(5) NOT NULL,
    IMDB FLOAT,
    PRIMARY KEY (SID)
);

CREATE TABLE Shows0(
    UID INTEGER NOT NULL, 
    SID INTEGER NOT NULL, 
    S INTEGER NOT NULL,
    PRIMARY KEY (UID, SID),
    FOREIGN KEY (UID) REFERENCES Shows1 (UID),
    FOREIGN KEY (SID) REFERENCES Shows2 (SID)
);